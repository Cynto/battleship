{"version":3,"sources":["reducers/AIGrid.ts","reducers/playerGrid.ts","reducers/playerGridComplete.ts","reducers/AIBoatLocation.ts","reducers/playerTurn.ts","reducers/playerBoatLocation.ts","reducers/index.ts","store.ts","actions/index.ts","api/AITurn.ts","api/turn.ts","components/gameboard/Gameboard.tsx","api/BoatPlacement.ts","components/endScreen/EndScreen.tsx","components/mainContainer/MainContainer.tsx","components/homePage/HomePage.tsx","components/header/Header.tsx","components/footer/Footer.tsx","components/boatsContainer/BoatsContainer.tsx","components/start/Start.tsx","App.tsx","index.tsx"],"names":["AIGrid","i","push","AIGridReducer","state","action","type","payload","playerGridArray","playerGridReducer","playerGridCompleteReducer","AIBoatReducer","playerTurnReducer","playerBoatReducer","allReducers","combineReducers","playerGridComplete","AIBoatArray","playerTurn","playerBoatArray","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","setPlayerGrid","newArray","setAIGrid","setGridComplete","bool","SetAIBoatArray","setPlayerBoatArray","setPlayerTurn","AITurn","getState","indexToHit","Math","floor","random","playerBoatsHit","AIBoatsHit","playerGrid","length","dispatch","turn","setTimeout","index","playerOrAI","storeState","grid","boatArray","boatHit","emptyHit","hitBoat","firstTenArray","lastTenArray","isSunk","locationArray","every","isHit","some","o","includes","uniqid","require","Gameboard","props","gridArray","useSelector","className","map","item","onClick","undefined","placeBoats","placeItem","timesRun","placeBoat","size","validPlacement","indexArray","rotation","lastValue","slice","boatItem","EndScreen","useDispatch","whoWon","setWhoWon","freshArray","to","AIArray","MainContainer","useState","useEffect","playerBoatsSunk","AIBoatsSunk","HomePage","Header","Footer","href","rel","target","BoatsContainer","setSize","changeGridItem","gridIndex","hoverLeave","size4BoatAmount","setSize4BoatAmount","size3BoatAmount","setSize3BoatAmount","size2BoatAmount","setSize2BoatAmount","size1BoatAmount","setSize1BoatAmount","verticalClass","setVerticalClass","draggable","onDragStart","onDragEnd","Start","setRotation","setGridIndex","newItem","newIndex","possiblePlacement","addPlayerBoatArray","document","addEventListener","e","key","onDragEnter","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.24b101db.chunk.js","sourcesContent":["const AIGrid: number[] = [];\nfor (let i = 0; i < 100; i++) {\n  AIGrid.push(0);\n}\nconst AIGridReducer = (state: number[] = AIGrid, action: any) => {\n  switch (action.type) {\n    case 'SET_AI_GRID':\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\nexport default AIGridReducer;\n","const playerGridArray: number[] = [];\nfor (let i = 0; i < 100; i++) {\n  playerGridArray.push(0);\n}\nconst playerGridReducer = (state: number[] = playerGridArray, action: any) => {\n  switch (action.type) {\n    case 'SET_PLAYER_GRID':\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\nexport default playerGridReducer;\n","const playerGridCompleteReducer = (state: boolean = false, action: any) => {\n  switch (action.type) {\n    case 'SET_GRID_COMPLETE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport default playerGridCompleteReducer;","const AIBoatReducer = (state: any[] = [], action: any) => {\n  switch (action.type) {\n    case 'SET_AI_BOAT_ARRAY':\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\nexport default AIBoatReducer;\n","const playerTurnReducer = (state: boolean = true, action: any) => {\n  switch (action.type) {\n    case 'SET_PLAYER_TURN':\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport default playerTurnReducer;\n","const playerBoatReducer = (state: any[] = [], action: any) => {\n  switch (action.type) {\n    case 'ADD_PLAYER_BOAT_ARRAY':\n      return [...state, action.payload];\n      case 'SET_PLAYER_BOAT_ARRAY':\n        return [...action.payload];\n    default:\n      return state;\n  }\n};\nexport default playerBoatReducer;\n","import { combineReducers } from 'redux';\nimport AIGridReducer from './AIGrid';\nimport playerGridReducer from './playerGrid';\nimport playerGridCompleteReducer from './playerGridComplete';\nimport AIBoatReducer from './AIBoatLocation';\nimport playerTurnReducer from './playerTurn';\nimport playerBoatReducer from './playerBoatLocation';\n\nconst allReducers = combineReducers({\n  playerGridArray: playerGridReducer,\n  playerGridComplete: playerGridCompleteReducer,\n  AIGrid: AIGridReducer,\n  AIBoatArray: AIBoatReducer,\n  playerTurn: playerTurnReducer,\n  playerBoatArray: playerBoatReducer\n});\nexport default allReducers;\n","import allReducers from './reducers/index';\nimport { compose, createStore } from 'redux';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(allReducers, composeEnhancers());\nexport default store","export const setPlayerGrid = (newArray: number[]) => {\n  return {\n    type: 'SET_PLAYER_GRID',\n    payload: newArray,\n  };\n};\nexport const setAIGrid = (newArray: number[]) => {\n  return {\n    type: 'SET_AI_GRID',\n    payload: newArray,\n  };\n};\nexport const setGridComplete = (bool: boolean) => {\n  return {\n    type: 'SET_GRID_COMPLETE',\n    payload: bool,\n  };\n};\nexport const SetAIBoatArray = (newArray: any) => {\n  return {\n    type: 'SET_AI_BOAT_ARRAY',\n    payload: newArray,\n  };\n};\nexport const setPlayerBoatArray = (newArray: any) => {\n  return {\n    type: 'SET_PLAYER_BOAT_ARRAY',\n    payload: newArray,\n  };\n};\nexport const addPlayerBoatArray = (newArray: any) => {\n  return {\n    type: 'ADD_PLAYER_BOAT_ARRAY',\n    payload: newArray,\n  };\n};\nexport const setPlayerTurn = (bool: boolean) => {\n  return {\n    type: 'SET_PLAYER_TURN',\n    payload: bool,\n  };\n};\n","import turn from './turn';\nimport store from '../store';\nimport { setPlayerTurn } from '../actions';\n\nconst AITurn: any = () => {\n  const randomIndex = () => {\n    return Math.floor(Math.random() * 100);\n  };\n\n  const AIGrid = store.getState().AIGrid;\n\n  let indexToHit = randomIndex();\n  let playerBoatsHit = 0;\n  let AIBoatsHit = 0;\n  const playerGrid = store.getState().playerGridArray;\n  for (let i = 0; i < playerGrid.length; i += 1) {\n    if (playerGrid[i] === 7) {\n      if (playerGrid[i + 1] !== 7 && playerGrid[i + 1] !== 6 && i + 1 <= 99) {\n        indexToHit = i + 1;\n      } else if (\n        playerGrid[i - 1] !== 7 &&\n        playerGrid[i - 1] !== 6 &&\n        i - 1 >= 0\n      ) {\n        indexToHit = i - 1;\n      } else if (\n        playerGrid[i - 10] !== 7 &&\n        playerGrid[i - 10] !== 6 &&\n        i - 10 >= 0\n      ) {\n        indexToHit = i - 10;\n      } else if (\n        playerGrid[i + 10] !== 7 &&\n        playerGrid[i + 10] !== 6 &&\n        i + 10 <= 99\n      ) {\n        indexToHit = i + 10;\n      }\n      if (\n        playerGrid[i] === 7 &&\n        playerGrid[i + 1] === 7 &&\n        playerGrid[i + 2] !== 6 &&\n        playerGrid[i + 2] !== 7 &&\n        i + 2 >= 0\n      ) {\n        indexToHit = i + 2;\n        break;\n      } else if (\n        playerGrid[i] === 7 &&\n        playerGrid[i + 1] === 7 &&\n        playerGrid[i + 2] === 7 &&\n        playerGrid[i + 3] !== 6 &&\n        playerGrid[i + 3] !== 7 &&\n        i + 3 <= 99\n      ) {\n        indexToHit = i + 3;\n        break;\n      } else if (\n        playerGrid[i] === 7 &&\n        playerGrid[i - 1] === 7 &&\n        playerGrid[i - 2] !== 6 &&\n        playerGrid[i - 2] !== 7 &&\n        i - 2 >= 0\n      ) {\n        indexToHit = i - 2;\n        break;\n      } else if (\n        playerGrid[i] === 7 &&\n        playerGrid[i - 1] === 7 &&\n        playerGrid[i - 2] === 7 &&\n        playerGrid[i - 3] !== 6 &&\n        playerGrid[i - 3] !== 7 &&\n        i - 3 >= 0\n      ) {\n        indexToHit = i - 3;\n        break;\n      } else if (\n        playerGrid[i] === 7 &&\n        playerGrid[i - 10] === 7 &&\n        playerGrid[i - 20] !== 6 &&\n        playerGrid[i - 20] !== 7 &&\n        i - 20 >= 0\n      ) {\n        indexToHit = i - 20;\n        break;\n      } else if (\n        playerGrid[i] === 7 &&\n        playerGrid[i - 10] === 7 &&\n        playerGrid[i - 20] === 7 &&\n        playerGrid[i - 30] !== 6 &&\n        playerGrid[i - 30] !== 7 &&\n        i - 30 >= 0\n      ) {\n        indexToHit = i - 30;\n        break;\n      } else if (\n        playerGrid[i] === 7 &&\n        playerGrid[i + 10] === 7 &&\n        playerGrid[i + 20] !== 6 &&\n        playerGrid[i + 20] !== 7 &&\n        i + 20 <= 99\n      ) {\n        indexToHit = i + 20;\n        break;\n      } else if (\n        playerGrid[i] === 7 &&\n        playerGrid[i + 10] === 7 &&\n        playerGrid[i + 20] === 7 &&\n        playerGrid[i + 30] !== 6 &&\n        playerGrid[i + 30] !== 7 &&\n        i + 30 <= 99\n      ) {\n        indexToHit = i - 30;\n        break;\n      }\n      playerBoatsHit += 1;\n      \n    }\n    if(AIGrid[i] === 5) {\n      AIBoatsHit += 1;\n    }\n  }\n  \n  if (playerBoatsHit !== 20 && AIBoatsHit !== 20) {\n    \n    if (\n      (playerGrid[indexToHit] === 6 || playerGrid[indexToHit] === 7) &&\n      indexToHit >= 0 &&\n      indexToHit <= 99\n    ) {\n      store.dispatch(setPlayerTurn(false));\n      return AITurn();\n    }\n    if (turn(indexToHit, 'AI') === false) {\n      store.dispatch(setPlayerTurn(true));\n    } else {\n      setTimeout(AITurn, 1000);\n      store.dispatch(setPlayerTurn(false));\n    }\n  }\n};\nexport default AITurn;\n","import store from '../store';\nimport {\n  setAIGrid,\n  SetAIBoatArray,\n  setPlayerGrid,\n  setPlayerBoatArray,\n} from '../actions';\nimport { setPlayerTurn } from '../actions';\nimport AITurn from './AITurn';\n\nconst turn = (index: number, playerOrAI: string) => {\n  \n  const storeState = store.getState();\n  let grid: number[] = [];\n  let playerTurn = storeState.playerTurn;\n  let boatArray: any[] = [];\n\n  let boatHit: number = 5;\n  let emptyHit = 4;\n  if (playerOrAI === 'player') {\n    grid = storeState.AIGrid;\n    boatArray = storeState.AIBoatArray;\n    boatHit = 5;\n    emptyHit = 4;\n  } else {\n    grid = storeState.playerGridArray;\n    boatArray = storeState.playerBoatArray;\n    boatHit = 7;\n    emptyHit = 6;\n  }\n  let hitBoat = false;\n  if (grid[index] === 0) {\n    hitBoat = false;\n    grid[index] = emptyHit;\n    if (playerOrAI === 'player') {\n      store.dispatch(setPlayerTurn(false));\n      return setTimeout(AITurn, 1000);\n    }\n    \n  } else if (grid[index] === 3 || grid[index] === 1) {\n    hitBoat = true;\n    grid[index] = boatHit;\n    if(playerOrAI === 'player') {\n      store.dispatch(setPlayerTurn(true));\n    }\n  }\n\n  const firstTenArray: number[] = [];\n  for (let i = 0; i < 10; i += 1) {\n    firstTenArray.push(i * 10);\n  }\n  const lastTenArray: number[] = [];\n  for (let i = 9; i < 100; i += 10) {\n    lastTenArray.push(i);\n  }\n  for (let i = 0; i < boatArray.length; i += 1) {\n    boatArray[i].isSunk = boatArray[i].locationArray.every(\n      (index: any) => grid[index] === boatHit,\n    )\n      ? true\n      : false;\n    boatArray[i].isHit = boatArray[i].locationArray.some(\n      (index: any) => grid[index] === boatHit,\n    )\n      ? true\n      : false;\n\n    if (boatArray[i].isSunk) {\n      for (let o = 0; o < boatArray[i].locationArray.length; o += 1) {\n        if (\n          boatArray[i].locationArray[o] + 10 <= 100 &&\n          grid[boatArray[i].locationArray[o] + 10] !== boatHit\n        ) {\n          grid[boatArray[i].locationArray[o] + 10] = emptyHit;\n        }\n        if (grid[boatArray[i].locationArray[o] - 10] !== boatHit) {\n          grid[boatArray[i].locationArray[o] - 10] = emptyHit;\n        }\n        if (\n          !lastTenArray.includes(boatArray[i].locationArray[o]) &&\n          grid[boatArray[i].locationArray[o] + 1] !== boatHit\n        ) {\n          if (boatArray[i].locationArray[o] + 11 <= 100) {\n            grid[boatArray[i].locationArray[o] + 11] = emptyHit;\n          }\n\n          grid[boatArray[i].locationArray[o] - 9] = emptyHit;\n          grid[boatArray[i].locationArray[o] + 1] = emptyHit;\n        }\n        if (\n          !firstTenArray.includes(boatArray[i].locationArray[o]) &&\n          grid[boatArray[i].locationArray[o] - 1] !== boatHit\n        ) {\n          if (boatArray[i].locationArray[o] + 9 <= 99) {\n            grid[boatArray[i].locationArray[o] + 9] = emptyHit;\n          }\n          grid[boatArray[i].locationArray[o] - 1] = emptyHit;\n\n          grid[boatArray[i].locationArray[o] - 11] = emptyHit;\n        }\n      }\n    }\n  }\n  if (playerOrAI === 'player') {\n    store.dispatch(setAIGrid(grid));\n    store.dispatch(SetAIBoatArray(boatArray));\n  } else {\n    store.dispatch(setPlayerGrid(grid));\n    store.dispatch(setPlayerBoatArray(boatArray));\n  }\n\n  return hitBoat;\n};\nexport default turn;\n","import React, {useEffect} from 'react';\nimport './gameboard.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport turn from '../../api/turn';\nconst uniqid = require('uniqid');\n\nfunction Gameboard(props: any) {\n  const { gridArray, playerGrid } = props;\n  const playerTurn = useSelector((state: any) => state.playerTurn)\n\n  \n  return (\n    <div data-testid=\"gameboard\" className=\"gameboard-container\">\n      <div className=\"title-container\">\n        {' '}\n        <h2>{playerGrid ? 'Player Board' : 'AI Board'}</h2>\n      </div>\n      <div className=\"grid-container\">\n        {gridArray.map((item: number, index: number) => {\n          if (item === 0) {\n            return (\n              <div\n                key={uniqid()}\n                data-testid={`grid-item-${index}`}\n                className={\n                  playerGrid\n                    ? 'not-visible grid-item'\n                    : 'not-visible grid-item computer-grid'\n                }\n                onClick={\n                  playerGrid\n                    ? undefined\n                    : () => {\n                      if(playerTurn) {\n                        turn(index, 'player');\n                      }\n                        \n                      }\n                }\n              ></div>\n            );\n          } else if (item === 1) {\n            return (\n              <div\n                key={uniqid()}\n                data-testid={`grid-item-${index}`}\n                className=\"visible-player grid-item\"\n              ></div>\n            );\n          } else if (item === 2) {\n            return (\n              <div\n                key={uniqid()}\n                data-testid={`grid-item-hover-${index}`}\n                className=\"hover-player grid-item\"\n              ></div>\n            );\n          } else if (item === 3) {\n            return (\n              <div\n                key={uniqid()}\n                \n                className=\" not-visible grid-item computer-grid\"\n                onClick={\n                  playerGrid\n                    ? undefined\n                    : () => {\n                      if(playerTurn) {\n                        turn(index, 'player');\n                      }\n                      }\n                }\n              ></div>\n            );\n          } else if (item === 4) {\n            return (\n              <div\n                key={uniqid()}\n                \n                className=\" hit-empty grid-item computer-grid\"\n              >\n                <i className=\"fas fa-bomb\"></i>\n              </div>\n            );\n          } else if (item === 5) {\n            return (\n              <div\n                key={uniqid()}\n                \n                className=\" visible-player grid-item computer-grid\"\n              >\n                <i className=\"fas fa-bomb\"></i>\n              </div>\n            );\n          } else if (item === 6) {\n            return (\n              <div\n                key={uniqid()}\n                \n                className=\"hit-empty grid-item\"\n              >\n                <i className=\"fas fa-bomb\"></i>\n              </div>\n            );\n          } else if (item === 7) {\n            return (\n              <div\n                key={uniqid()}\n                \n                className=\"hit-boat grid-item\"\n              >\n                <i className=\"fas fa-bomb\"></i>\n              </div>\n            );\n          }\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Gameboard;\n","import { useSelector, useDispatch } from 'react-redux';\nimport store from '../store';\nimport AIGridReducer from '../reducers/AIGrid';\nimport { setAIGrid, SetAIBoatArray, setPlayerBoatArray } from '../actions';\n\nconst placeBoats = (playerOrAI: string) => {\n  const gridArray: number[] = [];\n  const boatArray: any[] = [];\n  for (let i = 0; i < 100; i++) {\n    gridArray.push(0);\n  }\n  const getRandomIndex = () => {\n    return Math.floor(Math.random() * 99);\n  };\n  let placeItem = 3;\n  if(playerOrAI === 'player') {\n    placeItem = 1;\n  }else {\n    placeItem = 3;\n  }\n  let timesRun = 0;\n  const placeBoat = (size: number) => {\n    timesRun += 1;\n    let validPlacement = true;\n    let indexArray = [];\n    const rotation =\n      Math.floor(Math.random() * 2) === 1 ? 'vertical' : 'horizontal';\n    let index = getRandomIndex();\n    for (let i = 0; i < size; i += 1) {\n      if (rotation === 'vertical') {\n        indexArray.push(i + index);\n        index += 9;\n      } else {\n        indexArray.push(index + i);\n      }\n    }\n    const lastValue = indexArray.slice(-1);\n\n    if (\n      rotation === 'horizontal' ||\n      (rotation === 'vertical' && lastValue[0] < 100)\n    ) {\n      for (let i = 0; i < indexArray.length; i += 1) {\n        if (gridArray[indexArray[i]] === placeItem) {\n          validPlacement = false;\n        }\n        if (indexArray[i] % 10 === 9 && indexArray[i + 1] % 10 === 0) {\n          validPlacement = false;\n        }\n\n        if (gridArray[indexArray[i + 1]] === placeItem) {\n          validPlacement = false;\n        }\n      }\n    }\n    if (lastValue[0] > 99) {\n      validPlacement = false;\n    }\n    const firstTenArray: number[] = [];\n    for (let i = 0; i < 10; i += 1) {\n      firstTenArray.push(i * 10);\n    }\n    const lastTenArray: number[] = [];\n    for (let i = 9; i < 100; i += 10) {\n      lastTenArray.push(i);\n    }\n    for (let i = 0; i < indexArray.length; i += 1) {\n      if (\n        gridArray[indexArray[i] + 10] === placeItem ||\n        gridArray[indexArray[i] - 10] === placeItem\n      ) {\n        validPlacement = false;\n      }\n\n      if (\n        !firstTenArray.includes(indexArray[i]) &&\n        (gridArray[indexArray[i] - 1] === placeItem ||\n          gridArray[indexArray[i] - 11] === placeItem ||\n          gridArray[indexArray[i] + 9] === placeItem ||\n          gridArray[indexArray[0] - 11] === placeItem)\n      ) {\n        validPlacement = false;\n      }\n\n      if (\n        !lastTenArray.includes(indexArray[i]) &&\n        (gridArray[indexArray[i] + 1] === placeItem ||\n          gridArray[indexArray[i] + 11] === placeItem ||\n          gridArray[indexArray[i] - 9] === placeItem)\n      ) {\n        validPlacement = false;\n      }\n    }\n\n    for (let i = 0; i < indexArray.length; i += 1) {\n      if (validPlacement) {\n        gridArray[indexArray[i]] = placeItem;\n      }\n    }\n\n    if (timesRun >= 20) {\n      return 'Exceeded 10';\n    }\n    if (validPlacement === false) {\n      placeBoat(size);\n    } else {\n      timesRun = 0;\n      const boatItem = {\n        locationArray: indexArray,\n        rotation,\n        isSunk: false,\n        isHit: false\n      };\n      boatArray.push(boatItem);\n    }\n  };\n\n  placeBoat(4);\n\n  placeBoat(3);\n  placeBoat(3);\n\n  placeBoat(2);\n  placeBoat(2);\n  placeBoat(2);\n\n  placeBoat(1);\n  placeBoat(1);\n  placeBoat(1);\n  placeBoat(1);\n  if(playerOrAI === 'player') {\n    store.dispatch(setPlayerBoatArray(boatArray))\n  }else{\n    store.dispatch(SetAIBoatArray(boatArray));\n  \n  }\n  \n  return gridArray;\n};\nexport default placeBoats;\n","import React from 'react';\nimport './endScreen.css';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setPlayerGrid, setGridComplete, setAIGrid, setPlayerTurn } from '../../actions/index';\nimport placeBoats from '../../api/BoatPlacement';\n\nfunction EndScreen(props: any) {\n  const dispatch = useDispatch();\n  const { whoWon, setWhoWon } = props;\n\n  const freshArray: number[] = [];\n  for (let i = 0; i < 100; i += 1) {\n    freshArray.push(0);\n  }\n  return (\n    <div className=\"end-container\">\n      <h2>\n        {whoWon === 'player'\n          ? 'You won the game!'\n          : 'The enemy AI has defeated you!'}\n      </h2>\n      <Link to=\"start\">\n        <button\n          onClick={() => {\n            dispatch(setPlayerGrid(freshArray));\n            dispatch(setGridComplete(false));\n            const AIArray: number[] = placeBoats('AI');\n           \n            dispatch(setAIGrid(AIArray));\n            setWhoWon('')\n            dispatch(setPlayerTurn(true))\n          }}\n        >\n          Play Again\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nexport default EndScreen;\n","import React, { useEffect, useState } from 'react';\nimport Gameboard from '../gameboard/Gameboard';\nimport './mainContainer.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport EndScreen from '../endScreen/EndScreen';\n\nfunction MainContainer() {\n  const playerGridArray = useSelector((state: any) => state.playerGridArray);\n  const AIGrid = useSelector((state: any) => state.AIGrid);\n  const playerTurn = useSelector((state: any) => state.playerTurn);\n  const [whoWon, setWhoWon] = useState('');\n\n  useEffect(() => {\n    let playerBoatsSunk = 0;\n    let AIBoatsSunk = 0;\n    for (let i = 0; i < playerGridArray.length; i += 1) {\n      if (playerGridArray[i] === 7) {\n        playerBoatsSunk += 1;\n      }\n      if (AIGrid[i] === 5) {\n        AIBoatsSunk += 1;\n      }\n    }\n    if (playerBoatsSunk === 20) {\n      setWhoWon('AI')\n    } else if (AIBoatsSunk === 20) {\n      setWhoWon('player')\n    }\n  }, [[playerGridArray, AIGrid]]);\n\n  return (\n    <div data-testid=\"main-container\" className=\"main-container\">\n      {whoWon === '' ? (\n        <div className=\"grid-turn-container\">\n          <Gameboard playerGrid={true} gridArray={playerGridArray} />\n          <div className=\"turn\">\n            <h1>{playerTurn ? 'Your Turn!' : 'AI Turn'}</h1>\n          </div>\n          <Gameboard playerGrid={false} gridArray={AIGrid} />{' '}\n        </div>\n      ) : null}\n      {whoWon !== '' ? <EndScreen whoWon={whoWon} setWhoWon={setWhoWon}/> : null}\n    </div>\n  );\n}\n\nexport default MainContainer;\n","import React from 'react';\nimport './homepage.css';\nimport { Link } from 'react-router-dom';\n\nfunction HomePage(props: any) {\n  return (\n    <div data-testid=\"start-page\" className=\"start-page\">\n      <div className=\"menu-container\">\n        <p>Your mission is to destroy all enemy ships!</p>\n        <Link to=\"/start\">\n          <button>Start Game</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport './header.css';\nimport { Link } from 'react-router-dom';\nfunction Header() {\n  return (\n    <header data-testid=\"header\" className=\"header\">\n      <Link to=\"/\">\n        <h1>Battleship</h1>\n      </Link>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react'\nimport './footer.css'\n\nfunction Footer() {\n  return (\n    <footer>\n      <div className=\"left-footer\">\n        <h3>Made By Luca</h3>\n        <a href=\"https://github.com/Cynto\" rel=\"noreferrer\" target=\"_blank\">\n          <i className=\"fab fa-github\"></i>\n        </a>\n      </div>\n      <div className=\"right-footer\">\n        <h3>GitHub Repository</h3>\n\n        <a\n          href=\"https://github.com/Cynto/battleship\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          <i className=\"fab fa-github-square\"></i>\n        </a>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React, { useState, useEffect } from 'react';\nimport './boatsContainer.css';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setGridComplete, setPlayerGrid } from '../../actions';\nimport placeBoats from '../../api/BoatPlacement'\n\nfunction BoatsContainer(props: any) {\n  const playerGridComplete = useSelector(\n    (state: any) => state.playerGridComplete,\n  );\n  const {\n    setSize,\n    changeGridItem,\n\n    gridIndex,\n    hoverLeave,\n    rotation,\n  } = props;\n  const [size4BoatAmount, setSize4BoatAmount] = useState(1);\n  const [size3BoatAmount, setSize3BoatAmount] = useState(2);\n  const [size2BoatAmount, setSize2BoatAmount] = useState(3);\n  const [size1BoatAmount, setSize1BoatAmount] = useState(4);\n  const [verticalClass, setVerticalClass] = useState(\n    rotation === 'vertical' ? 'vertical' : '',\n  );\n  const dispatch = useDispatch();\n\n  const freshArray: number[] = [];\n  for (let i = 0; i < 100; i += 1) {\n    freshArray.push(0);\n  }\n\n  useEffect(() => {\n    if (\n      !size1BoatAmount &&\n      !size2BoatAmount &&\n      !size3BoatAmount &&\n      !size4BoatAmount\n    ) {\n      dispatch(setGridComplete(true));\n    }\n  }, [size4BoatAmount, size3BoatAmount, size2BoatAmount, size1BoatAmount]);\n\n  const resetBoatsAmount = () => {\n    setSize4BoatAmount(1);\n    setSize3BoatAmount(2);\n    setSize2BoatAmount(3);\n    setSize1BoatAmount(4);\n  };\n  useEffect(() => {\n    if (playerGridComplete) {\n      setSize4BoatAmount(0);\n      setSize3BoatAmount(0);\n      setSize2BoatAmount(0);\n      setSize1BoatAmount(0);\n    }\n  }, [playerGridComplete]);\n  useEffect(() => {\n    if (rotation === 'vertical') {\n      setVerticalClass('vertical');\n    } else setVerticalClass('');\n  }, [rotation]);\n  return (\n    <div className=\"total-right-container\">\n      <div className={`boats-container ${verticalClass}`}>\n        <div className={`boat-amount-container ${verticalClass}`}>\n          <span>{size4BoatAmount}x</span>\n          <div\n            data-testid=\"draggable-item\"\n            className={`draggable-item ${verticalClass}`}\n            draggable=\"true\"\n            onDragStart={() => setSize(4)}\n            onDragEnd={() => {\n              if (size4BoatAmount > 0) {\n                if (changeGridItem(gridIndex, 1)) {\n                  setSize4BoatAmount(size4BoatAmount - 1);\n                }\n              }\n\n              hoverLeave();\n            }}\n            onClick={() => setSize(4)}\n          >\n            <div className=\"visible-player grid-item\"></div>\n            <div className=\"visible-player grid-item\"></div>\n            <div className=\"visible-player grid-item\"></div>\n            <div className=\"visible-player grid-item\"></div>\n          </div>\n        </div>\n\n        <div className={`boat-amount-container ${verticalClass}`}>\n          <span>{size3BoatAmount}x</span>\n          <div\n            className={`draggable-item ${verticalClass}`}\n            draggable=\"true\"\n            onDragStart={() => setSize(3)}\n            onDragEnd={() => {\n              if (size3BoatAmount > 0) {\n                if (changeGridItem(gridIndex, 1)) {\n                  setSize3BoatAmount(size3BoatAmount - 1);\n                }\n              }\n\n              hoverLeave();\n            }}\n            onClick={() => setSize(3)}\n          >\n            <div className=\"visible-player grid-item\"></div>\n            <div className=\"visible-player grid-item\"></div>\n            <div className=\"visible-player grid-item\"></div>\n          </div>\n        </div>\n        <div className={`boat-amount-container ${verticalClass}`}>\n          <span>{size2BoatAmount}x</span>\n\n          <div\n            className={`draggable-item ${verticalClass}`}\n            draggable=\"true\"\n            onDragStart={() => setSize(2)}\n            onDragEnd={() => {\n              if (size2BoatAmount > 0) {\n                if (changeGridItem(gridIndex, 1)) {\n                  setSize2BoatAmount(size2BoatAmount - 1);\n                }\n              }\n\n              hoverLeave();\n            }}\n            onClick={() => setSize(2)}\n          >\n            <div className=\"visible-player grid-item\"></div>\n            <div className=\"visible-player grid-item\"></div>\n          </div>\n        </div>\n        <div className={`boat-amount-container ${verticalClass}`}>\n          <span>{size1BoatAmount}x</span>\n          <div\n            className={`draggable-item ${verticalClass}`}\n            draggable=\"true\"\n            onDragStart={() => setSize(1)}\n            onDragEnd={() => {\n              if (size1BoatAmount > 0) {\n                if (changeGridItem(gridIndex, 1)) {\n                  setSize1BoatAmount(size1BoatAmount - 1);\n                }\n              }\n\n              hoverLeave();\n            }}\n            onClick={() => setSize(1)}\n          >\n            <div className=\"visible-player grid-item\"></div>\n          </div>\n        </div>\n      </div>\n      <div className=\"start-button-container\">\n        <button\n          onClick={() => {\n            resetBoatsAmount();\n            dispatch(setPlayerGrid(freshArray));\n            dispatch(setGridComplete(false))\n          }}\n        >\n          Reset{' '}\n        </button>\n        <button onClick={() => {\n          dispatch(setPlayerGrid(placeBoats('player')))\n          dispatch(setGridComplete(true));\n        }}>\n          Randomize\n        </button>\n        {!size1BoatAmount &&\n        !size2BoatAmount &&\n        !size3BoatAmount &&\n        !size4BoatAmount ? (\n          <Link to=\"/game\">\n            <button>Start</button>\n          </Link>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default BoatsContainer;\n","import React, { useEffect, useState } from 'react';\nimport './start.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setPlayerGrid, addPlayerBoatArray } from '../../actions';\nimport BoatsContainer from '../boatsContainer/BoatsContainer';\n\nconst uniqid = require('uniqid');\n\nfunction Start() {\n  const [size, setSize] = useState(1);\n\n  const [rotation, setRotation] = useState('horizontal');\n  const [gridIndex, setGridIndex] = useState(1);\n\n  const playerGridArray = useSelector((state: any) => state.playerGridArray);\n\n  const dispatch = useDispatch();\n\n  const hoverLeave = () => {\n    let newArray = playerGridArray;\n    for (let i = 0; i < newArray.length; i += 1) {\n      if (newArray[i] === 2) {\n        newArray[i] = 0;\n      }\n    }\n    dispatch(setPlayerGrid(newArray));\n  };\n\n  const changeGridItem = (index: number, newItem: number) => {\n    let newArray = playerGridArray;\n    let newIndex = index;\n    let indexArray = [];\n\n    let possiblePlacement = true;\n    for (let i = 0; i < size; i += 1) {\n      if (rotation === 'horizontal') {\n        indexArray.push(index + i);\n      } else {\n        indexArray.push(i + newIndex);\n        newIndex += 9;\n      }\n    }\n    const lastValue = indexArray.slice(-1);\n\n    if (\n      rotation === 'horizontal' ||\n      (rotation === 'vertical' && lastValue[0] < 100)\n    ) {\n      for (let i = 0; i < indexArray.length; i += 1) {\n        if (newArray[indexArray[i]] === 1) {\n          possiblePlacement = false;\n        }\n        if (indexArray[i] % 10 === 9 && indexArray[i + 1] % 10 === 0) {\n          possiblePlacement = false;\n        }\n\n        if (newArray[indexArray[i + 1]] === 1) {\n          possiblePlacement = false;\n        }\n      }\n\n      const firstTenArray: number[] = [];\n      for (let i = 0; i < 10; i += 1) {\n        firstTenArray.push(i * 10);\n      }\n      const lastTenArray: number[] = [];\n      for (let i = 9; i < 100; i += 10) {\n        lastTenArray.push(i);\n      }\n      for (let i = 0; i < indexArray.length; i += 1) {\n        if (\n          newArray[indexArray[i] + 10] === 1 ||\n          newArray[indexArray[i] - 10] === 1\n        ) {\n          possiblePlacement = false;\n        }\n\n        if (\n          !firstTenArray.includes(indexArray[i]) &&\n          (newArray[indexArray[i] - 1] === 1 ||\n            newArray[indexArray[i] - 11] === 1 ||\n            newArray[indexArray[i] + 9] === 1 ||\n            newArray[indexArray[0] - 11] === 1)\n        ) {\n          possiblePlacement = false;\n        }\n\n        if (\n          !lastTenArray.includes(indexArray[i]) &&\n          (newArray[indexArray[i] + 1] === 1 ||\n            newArray[indexArray[i] + 11] === 1 ||\n            newArray[indexArray[i] - 9] === 1)\n        ) {\n          possiblePlacement = false;\n        }\n      }\n\n      if (possiblePlacement) {\n        for (let i = 0; i < indexArray.length; i += 1) {\n          newArray[indexArray[i]] = newItem;\n        }\n        if (newItem === 1) {\n          const boatInfo = {\n            locationArray: indexArray,\n            rotation,\n            isSunk: false,\n            isHit: false,\n          };\n          dispatch(addPlayerBoatArray(boatInfo));\n        }\n      }\n    }\n    dispatch(setPlayerGrid(newArray));\n\n    return possiblePlacement;\n  };\n  document.addEventListener('keypress', (e) => {\n    if (e.key === 'r') {\n      if (rotation === 'vertical') {\n        setRotation('horizontal');\n      } else {\n        setRotation('vertical');\n      }\n    }\n  });\n  return (\n    <div data-testid=\"start\" className=\"start\">\n      <div className=\"grid-layout-title-container\">\n        <h2>Arrange Your Board</h2>\n        <p>Press R to Rotate Ships</p>\n        <div className=\"grid-layout-container\">\n          <div className=\"grid-container\">\n            {playerGridArray.map((item: number, index: number) => {\n              if (item === 0) {\n                return (\n                  <div\n                    key={uniqid()}\n                    data-testid={`grid-item-${index}`}\n                    className=\"not-visible grid-item\"\n                    onDragEnter={() => {\n                      hoverLeave();\n                      changeGridItem(index, 2);\n                      setGridIndex(index);\n                    }}\n                  ></div>\n                );\n              } else if (item === 1) {\n                return (\n                  <div\n                    key={uniqid()}\n                    data-testid={`grid-item-${index}`}\n                    className=\"visible-player grid-item\"\n                  ></div>\n                );\n              } else if (item === 2) {\n                return (\n                  <div\n                    key={uniqid()}\n                    data-testid={`grid-item-hover-${index}`}\n                    className=\"hover-player grid-item\"\n                  ></div>\n                );\n              }\n            })}\n          </div>\n          <BoatsContainer\n            hoverLeave={hoverLeave}\n            setSize={setSize}\n            changeGridItem={changeGridItem}\n            gridIndex={gridIndex}\n            rotation={rotation}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Start;\n","import MainContainer from './components/mainContainer/MainContainer';\nimport HomePage from './components/homePage/HomePage';\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\nimport { useState, useEffect } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setAIGrid } from './actions';\nimport placeBoats from './api/BoatPlacement';\nimport Start from './components/start/Start';\n\n\nfunction App() {\n  const AIArray: number[] = placeBoats('AI')\n  const dispatch = useDispatch();\n  dispatch(setAIGrid(AIArray))\n  \n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/start\">\n            <Start />\n          </Route>\n          <Route path=\"/game\">\n            <MainContainer />\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport allReducers from './reducers/index';\nimport store from './store'\n\nexport default store\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}